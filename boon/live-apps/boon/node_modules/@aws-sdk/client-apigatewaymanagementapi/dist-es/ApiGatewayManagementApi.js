import { __extends } from "tslib";
import { ApiGatewayManagementApiClient } from "./ApiGatewayManagementApiClient";
import { DeleteConnectionCommand, } from "./commands/DeleteConnectionCommand";
import { GetConnectionCommand, } from "./commands/GetConnectionCommand";
import { PostToConnectionCommand, } from "./commands/PostToConnectionCommand";
var ApiGatewayManagementApi = (function (_super) {
    __extends(ApiGatewayManagementApi, _super);
    function ApiGatewayManagementApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ApiGatewayManagementApi.prototype.deleteConnection = function (args, optionsOrCb, cb) {
        var command = new DeleteConnectionCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get ".concat(typeof optionsOrCb));
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    ApiGatewayManagementApi.prototype.getConnection = function (args, optionsOrCb, cb) {
        var command = new GetConnectionCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get ".concat(typeof optionsOrCb));
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    ApiGatewayManagementApi.prototype.postToConnection = function (args, optionsOrCb, cb) {
        var command = new PostToConnectionCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get ".concat(typeof optionsOrCb));
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    return ApiGatewayManagementApi;
}(ApiGatewayManagementApiClient));
export { ApiGatewayManagementApi };
