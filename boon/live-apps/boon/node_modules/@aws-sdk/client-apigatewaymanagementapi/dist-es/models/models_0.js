import { __assign, __extends } from "tslib";
import { ApiGatewayManagementApiServiceException as __BaseException } from "./ApiGatewayManagementApiServiceException";
var ForbiddenException = (function (_super) {
    __extends(ForbiddenException, _super);
    function ForbiddenException(opts) {
        var _this = _super.call(this, __assign({ name: "ForbiddenException", $fault: "client" }, opts)) || this;
        _this.name = "ForbiddenException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, ForbiddenException.prototype);
        return _this;
    }
    return ForbiddenException;
}(__BaseException));
export { ForbiddenException };
var GoneException = (function (_super) {
    __extends(GoneException, _super);
    function GoneException(opts) {
        var _this = _super.call(this, __assign({ name: "GoneException", $fault: "client" }, opts)) || this;
        _this.name = "GoneException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, GoneException.prototype);
        return _this;
    }
    return GoneException;
}(__BaseException));
export { GoneException };
var LimitExceededException = (function (_super) {
    __extends(LimitExceededException, _super);
    function LimitExceededException(opts) {
        var _this = _super.call(this, __assign({ name: "LimitExceededException", $fault: "client" }, opts)) || this;
        _this.name = "LimitExceededException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, LimitExceededException.prototype);
        return _this;
    }
    return LimitExceededException;
}(__BaseException));
export { LimitExceededException };
var PayloadTooLargeException = (function (_super) {
    __extends(PayloadTooLargeException, _super);
    function PayloadTooLargeException(opts) {
        var _this = _super.call(this, __assign({ name: "PayloadTooLargeException", $fault: "client" }, opts)) || this;
        _this.name = "PayloadTooLargeException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, PayloadTooLargeException.prototype);
        _this.Message = opts.Message;
        return _this;
    }
    return PayloadTooLargeException;
}(__BaseException));
export { PayloadTooLargeException };
export var DeleteConnectionRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetConnectionRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var IdentityFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var GetConnectionResponseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var PostToConnectionRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
