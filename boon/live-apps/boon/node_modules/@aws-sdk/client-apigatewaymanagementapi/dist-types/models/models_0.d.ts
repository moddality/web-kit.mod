import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { ApiGatewayManagementApiServiceException as __BaseException } from "./ApiGatewayManagementApiServiceException";
export interface DeleteConnectionRequest {
    ConnectionId: string | undefined;
}
/**
 * <p>The caller is not authorized to invoke this operation.</p>
 */
export declare class ForbiddenException extends __BaseException {
    readonly name: "ForbiddenException";
    readonly $fault: "client";
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<ForbiddenException, __BaseException>);
}
/**
 * <p>The connection with the provided id no longer exists.</p>
 */
export declare class GoneException extends __BaseException {
    readonly name: "GoneException";
    readonly $fault: "client";
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<GoneException, __BaseException>);
}
/**
 * <p>The client is sending more than the allowed number of requests per unit of time or the WebSocket client side buffer is full.</p>
 */
export declare class LimitExceededException extends __BaseException {
    readonly name: "LimitExceededException";
    readonly $fault: "client";
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
}
export interface GetConnectionRequest {
    ConnectionId: string | undefined;
}
export interface Identity {
    /**
     * <p>The source IP address of the TCP connection making the request to API Gateway.</p>
     */
    SourceIp: string | undefined;
    /**
     * <p>The User Agent of the API caller.</p>
     */
    UserAgent: string | undefined;
}
export interface GetConnectionResponse {
    /**
     * <p>The time in ISO 8601 format for when the connection was established.</p>
     */
    ConnectedAt?: Date;
    Identity?: Identity;
    /**
     * <p>The time in ISO 8601 format for when the connection was last active.</p>
     */
    LastActiveAt?: Date;
}
/**
 * <p>The data has exceeded the maximum size allowed.</p>
 */
export declare class PayloadTooLargeException extends __BaseException {
    readonly name: "PayloadTooLargeException";
    readonly $fault: "client";
    Message?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<PayloadTooLargeException, __BaseException>);
}
export interface PostToConnectionRequest {
    /**
     * <p>The data to be sent to the client specified by its connection id.</p>
     */
    Data: Uint8Array | undefined;
    /**
     * <p>The identifier of the connection that a specific client is using.</p>
     */
    ConnectionId: string | undefined;
}
/**
 * @internal
 */
export declare const DeleteConnectionRequestFilterSensitiveLog: (obj: DeleteConnectionRequest) => any;
/**
 * @internal
 */
export declare const GetConnectionRequestFilterSensitiveLog: (obj: GetConnectionRequest) => any;
/**
 * @internal
 */
export declare const IdentityFilterSensitiveLog: (obj: Identity) => any;
/**
 * @internal
 */
export declare const GetConnectionResponseFilterSensitiveLog: (obj: GetConnectionResponse) => any;
/**
 * @internal
 */
export declare const PostToConnectionRequestFilterSensitiveLog: (obj: PostToConnectionRequest) => any;
