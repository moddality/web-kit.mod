import { __assign, __extends } from "tslib";
import { RDSDataServiceException as __BaseException } from "./RDSDataServiceException";
var AccessDeniedException = (function (_super) {
    __extends(AccessDeniedException, _super);
    function AccessDeniedException(opts) {
        var _this = _super.call(this, __assign({ name: "AccessDeniedException", $fault: "client" }, opts)) || this;
        _this.name = "AccessDeniedException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, AccessDeniedException.prototype);
        return _this;
    }
    return AccessDeniedException;
}(__BaseException));
export { AccessDeniedException };
var BadRequestException = (function (_super) {
    __extends(BadRequestException, _super);
    function BadRequestException(opts) {
        var _this = _super.call(this, __assign({ name: "BadRequestException", $fault: "client" }, opts)) || this;
        _this.name = "BadRequestException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, BadRequestException.prototype);
        return _this;
    }
    return BadRequestException;
}(__BaseException));
export { BadRequestException };
export var TypeHint;
(function (TypeHint) {
    TypeHint["DATE"] = "DATE";
    TypeHint["DECIMAL"] = "DECIMAL";
    TypeHint["JSON"] = "JSON";
    TypeHint["TIME"] = "TIME";
    TypeHint["TIMESTAMP"] = "TIMESTAMP";
    TypeHint["UUID"] = "UUID";
})(TypeHint || (TypeHint = {}));
var ForbiddenException = (function (_super) {
    __extends(ForbiddenException, _super);
    function ForbiddenException(opts) {
        var _this = _super.call(this, __assign({ name: "ForbiddenException", $fault: "client" }, opts)) || this;
        _this.name = "ForbiddenException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, ForbiddenException.prototype);
        return _this;
    }
    return ForbiddenException;
}(__BaseException));
export { ForbiddenException };
var InternalServerErrorException = (function (_super) {
    __extends(InternalServerErrorException, _super);
    function InternalServerErrorException(opts) {
        var _this = _super.call(this, __assign({ name: "InternalServerErrorException", $fault: "server" }, opts)) || this;
        _this.name = "InternalServerErrorException";
        _this.$fault = "server";
        Object.setPrototypeOf(_this, InternalServerErrorException.prototype);
        return _this;
    }
    return InternalServerErrorException;
}(__BaseException));
export { InternalServerErrorException };
var ServiceUnavailableError = (function (_super) {
    __extends(ServiceUnavailableError, _super);
    function ServiceUnavailableError(opts) {
        var _this = _super.call(this, __assign({ name: "ServiceUnavailableError", $fault: "server" }, opts)) || this;
        _this.name = "ServiceUnavailableError";
        _this.$fault = "server";
        Object.setPrototypeOf(_this, ServiceUnavailableError.prototype);
        return _this;
    }
    return ServiceUnavailableError;
}(__BaseException));
export { ServiceUnavailableError };
var StatementTimeoutException = (function (_super) {
    __extends(StatementTimeoutException, _super);
    function StatementTimeoutException(opts) {
        var _this = _super.call(this, __assign({ name: "StatementTimeoutException", $fault: "client" }, opts)) || this;
        _this.name = "StatementTimeoutException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, StatementTimeoutException.prototype);
        _this.dbConnectionId = opts.dbConnectionId;
        return _this;
    }
    return StatementTimeoutException;
}(__BaseException));
export { StatementTimeoutException };
var NotFoundException = (function (_super) {
    __extends(NotFoundException, _super);
    function NotFoundException(opts) {
        var _this = _super.call(this, __assign({ name: "NotFoundException", $fault: "client" }, opts)) || this;
        _this.name = "NotFoundException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, NotFoundException.prototype);
        return _this;
    }
    return NotFoundException;
}(__BaseException));
export { NotFoundException };
export var DecimalReturnType;
(function (DecimalReturnType) {
    DecimalReturnType["DOUBLE_OR_LONG"] = "DOUBLE_OR_LONG";
    DecimalReturnType["STRING"] = "STRING";
})(DecimalReturnType || (DecimalReturnType = {}));
export var RecordsFormatType;
(function (RecordsFormatType) {
    RecordsFormatType["JSON"] = "JSON";
    RecordsFormatType["NONE"] = "NONE";
})(RecordsFormatType || (RecordsFormatType = {}));
export var LongReturnType;
(function (LongReturnType) {
    LongReturnType["LONG"] = "LONG";
    LongReturnType["STRING"] = "STRING";
})(LongReturnType || (LongReturnType = {}));
export var ArrayValue;
(function (ArrayValue) {
    ArrayValue.visit = function (value, visitor) {
        if (value.booleanValues !== undefined)
            return visitor.booleanValues(value.booleanValues);
        if (value.longValues !== undefined)
            return visitor.longValues(value.longValues);
        if (value.doubleValues !== undefined)
            return visitor.doubleValues(value.doubleValues);
        if (value.stringValues !== undefined)
            return visitor.stringValues(value.stringValues);
        if (value.arrayValues !== undefined)
            return visitor.arrayValues(value.arrayValues);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(ArrayValue || (ArrayValue = {}));
export var Field;
(function (Field) {
    Field.visit = function (value, visitor) {
        if (value.isNull !== undefined)
            return visitor.isNull(value.isNull);
        if (value.booleanValue !== undefined)
            return visitor.booleanValue(value.booleanValue);
        if (value.longValue !== undefined)
            return visitor.longValue(value.longValue);
        if (value.doubleValue !== undefined)
            return visitor.doubleValue(value.doubleValue);
        if (value.stringValue !== undefined)
            return visitor.stringValue(value.stringValue);
        if (value.blobValue !== undefined)
            return visitor.blobValue(value.blobValue);
        if (value.arrayValue !== undefined)
            return visitor.arrayValue(value.arrayValue);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(Field || (Field = {}));
export var Value;
(function (Value) {
    Value.visit = function (value, visitor) {
        if (value.isNull !== undefined)
            return visitor.isNull(value.isNull);
        if (value.bitValue !== undefined)
            return visitor.bitValue(value.bitValue);
        if (value.bigIntValue !== undefined)
            return visitor.bigIntValue(value.bigIntValue);
        if (value.intValue !== undefined)
            return visitor.intValue(value.intValue);
        if (value.doubleValue !== undefined)
            return visitor.doubleValue(value.doubleValue);
        if (value.realValue !== undefined)
            return visitor.realValue(value.realValue);
        if (value.stringValue !== undefined)
            return visitor.stringValue(value.stringValue);
        if (value.blobValue !== undefined)
            return visitor.blobValue(value.blobValue);
        if (value.arrayValues !== undefined)
            return visitor.arrayValues(value.arrayValues);
        if (value.structValue !== undefined)
            return visitor.structValue(value.structValue);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(Value || (Value = {}));
export var BeginTransactionRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var BeginTransactionResponseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ColumnMetadataFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var CommitTransactionRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var CommitTransactionResponseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ExecuteSqlRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ResultSetMetadataFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ResultSetOptionsFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var RollbackTransactionRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var RollbackTransactionResponseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ArrayValueFilterSensitiveLog = function (obj) {
    var _a;
    if (obj.booleanValues !== undefined)
        return { booleanValues: obj.booleanValues };
    if (obj.longValues !== undefined)
        return { longValues: obj.longValues };
    if (obj.doubleValues !== undefined)
        return { doubleValues: obj.doubleValues };
    if (obj.stringValues !== undefined)
        return { stringValues: obj.stringValues };
    if (obj.arrayValues !== undefined)
        return { arrayValues: obj.arrayValues.map(function (item) { return ArrayValueFilterSensitiveLog(item); }) };
    if (obj.$unknown !== undefined)
        return _a = {}, _a[obj.$unknown[0]] = "UNKNOWN", _a;
};
export var FieldFilterSensitiveLog = function (obj) {
    var _a;
    if (obj.isNull !== undefined)
        return { isNull: obj.isNull };
    if (obj.booleanValue !== undefined)
        return { booleanValue: obj.booleanValue };
    if (obj.longValue !== undefined)
        return { longValue: obj.longValue };
    if (obj.doubleValue !== undefined)
        return { doubleValue: obj.doubleValue };
    if (obj.stringValue !== undefined)
        return { stringValue: obj.stringValue };
    if (obj.blobValue !== undefined)
        return { blobValue: obj.blobValue };
    if (obj.arrayValue !== undefined)
        return { arrayValue: ArrayValueFilterSensitiveLog(obj.arrayValue) };
    if (obj.$unknown !== undefined)
        return _a = {}, _a[obj.$unknown[0]] = "UNKNOWN", _a;
};
export var SqlParameterFilterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.value && { value: FieldFilterSensitiveLog(obj.value) }))); };
export var UpdateResultFilterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.generatedFields && { generatedFields: obj.generatedFields.map(function (item) { return FieldFilterSensitiveLog(item); }) }))); };
export var ValueFilterSensitiveLog = function (obj) {
    var _a;
    if (obj.isNull !== undefined)
        return { isNull: obj.isNull };
    if (obj.bitValue !== undefined)
        return { bitValue: obj.bitValue };
    if (obj.bigIntValue !== undefined)
        return { bigIntValue: obj.bigIntValue };
    if (obj.intValue !== undefined)
        return { intValue: obj.intValue };
    if (obj.doubleValue !== undefined)
        return { doubleValue: obj.doubleValue };
    if (obj.realValue !== undefined)
        return { realValue: obj.realValue };
    if (obj.stringValue !== undefined)
        return { stringValue: obj.stringValue };
    if (obj.blobValue !== undefined)
        return { blobValue: obj.blobValue };
    if (obj.arrayValues !== undefined)
        return { arrayValues: obj.arrayValues.map(function (item) { return ValueFilterSensitiveLog(item); }) };
    if (obj.structValue !== undefined)
        return { structValue: StructValueFilterSensitiveLog(obj.structValue) };
    if (obj.$unknown !== undefined)
        return _a = {}, _a[obj.$unknown[0]] = "UNKNOWN", _a;
};
export var ExecuteStatementRequestFilterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.parameters && { parameters: obj.parameters.map(function (item) { return SqlParameterFilterSensitiveLog(item); }) }))); };
export var StructValueFilterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.attributes && { attributes: obj.attributes.map(function (item) { return ValueFilterSensitiveLog(item); }) }))); };
export var BatchExecuteStatementRequestFilterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.parameterSets && {
    parameterSets: obj.parameterSets.map(function (item) { return item.map(function (item) { return SqlParameterFilterSensitiveLog(item); }); }),
}))); };
export var BatchExecuteStatementResponseFilterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.updateResults && { updateResults: obj.updateResults.map(function (item) { return UpdateResultFilterSensitiveLog(item); }) }))); };
export var _RecordFilterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.values && { values: obj.values.map(function (item) { return ValueFilterSensitiveLog(item); }) }))); };
export var ExecuteStatementResponseFilterSensitiveLog = function (obj) { return (__assign(__assign(__assign({}, obj), (obj.records && { records: obj.records.map(function (item) { return item.map(function (item) { return FieldFilterSensitiveLog(item); }); }) })), (obj.generatedFields && { generatedFields: obj.generatedFields.map(function (item) { return FieldFilterSensitiveLog(item); }) }))); };
export var ResultFrameFilterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.records && { records: obj.records.map(function (item) { return _RecordFilterSensitiveLog(item); }) }))); };
export var SqlStatementResultFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var ExecuteSqlResponseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
