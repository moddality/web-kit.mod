{
    "root": {
        "prototype": "montage/data/service/expression-data-mapping",
        "values": {
            "objectDescriptor": {"@": "UserPoolClientDescriptor"},
            "primaryKeyPropertyDescriptors": [
                {"@": "UserPoolIdDescriptor"},
                {"@": "ClientIdDescriptor"}
            ],
            "objectMapping": {
                "rules": {
                    "clientId": {"<->": "ClientId"},
                    "userPoolId": {"<->": "UserPoolId"},
                    "userPool": {
                        "<->": "UserPoolId",
                        "converter": {"@": "userPool-converter"}
                    },
                    "clientName": {"<->": "ClientName"},
                    "generateSecret": {"<->": "ClientSecret.defined()"},
                    "clientSecret": {"<->": "ClientSecret"},
                    "refreshTokenValidity": {"<->": "RefreshTokenValidity"},
                    "accessTokenValidity": {"<->": "AccessTokenValidity"},
                    "idTokenValidity": {"<->": "IdTokenValidity"},
                    "tokenValidityUnits": {"<->": "TokenValidityUnits"}
                }
            },
            "rawDataMapping": {
                "rules": {
                }
            },
            "requisitePropertyNames": [
                "name"
            ]
        }
    },

    "UserPoolClientDescriptor": {
        "object": "../../../model/aws/cognito/user-pool-client.mjson"
    },

    "UserPoolIdDescriptor": {
        "prototype": "montage/core/meta/property-descriptor",
        "values": {
            "name": "UserPoolId",
            "valueType": "string"
        }
    },
    "ClientIdDescriptor": {
        "prototype": "montage/core/meta/property-descriptor",
        "values": {
            "name": "ClientId",
            "valueType": "string"
        }
    },
    "userPool-converter": {
        "prototype": "montage/data/converter/raw-foreign-value-to-object-converter",
        "values": {
            "convertExpression": "Id == $"
        }
    }

}
